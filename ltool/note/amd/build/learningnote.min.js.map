{"version":3,"file":"learningnote.min.js","sources":["../src/learningnote.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Notes ltool define js.\n * @module   ltool_note\n * @category  Classes - autoloading\n * @copyright 2021, bdecent gmbh bdecent.de\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'core/modal_factory', 'core/str', 'core/fragment', 'core/modal_events', 'core/ajax', 'core/notification', 'core/utils'],\n    function ($, ModalFactory, String, Fragment, ModalEvents, Ajax, notification, Utils) {\n\n        /* global ltools, ltool_note_config */\n\n        /**\n         * Controls notes tool action.\n         * @param {int} contextid context id\n         */\n        function learningToolNoteAction(contextid) {\n            // Get configuration from global variable\n            const params = window.ltool_note_config || {}\n\n            showModalLttool(contextid, params);\n            var sorttypefilter = document.querySelector(\".ltnote-sortfilter i#notessorttype\");\n            if (sorttypefilter) {\n                sorttypefilter.addEventListener(\"click\", function () {\n                    var sorttype = this.getAttribute('data-type');\n                    noteSortActionPage(sorttype);\n                });\n            }\n\n            // Content designer note.\n            $(document).on('click', '.content-designer-learningtool-note', function (e) {\n                var button = $(this);\n                var itemType = button.data('itemtype');\n                var itemId = button.data('itemid');\n                var pageurl = button.data('pageurl');\n                params.itemtype = itemType;\n                params.itemid = itemId;\n                params.pageurl = pageurl;\n                modalshowHandler(contextid, params, true);\n            });\n\n            var noteprintblock = document.querySelector(\".note-print-block\");\n            if (noteprintblock) {\n                noteprintblock.addEventListener(\"click\", notePrintHandler.bind(contextid, params));\n            }\n\n            const clearIcon = document.querySelector('.ltool-navigation [data-action=\"clearsearch\"]');\n            var searchinput = document.querySelector('.ltool-navigation [data-action=\"search\"]');\n\n            if (clearIcon) {\n                clearIcon.addEventListener('click', () => {\n                    searchinput.value = '';\n                    searchinput.focus();\n                    clearSearch(clearIcon);\n                    // Load default content without search\n                    performSearch(\"\", contextid, params);\n                });\n            }\n\n            if (searchinput) {\n                searchinput.addEventListener('input', Utils.debounce(() => {\n                    if (searchinput.value === '') {\n                        clearSearch(clearIcon);\n                        // Load default content without search\n                        performSearch(\"\", contextid, params);\n                    } else {\n                        activeSearch(clearIcon);\n                        var search = searchinput.value.trim();\n                        // If you have a search function, you can call it here.\n                        console.log(searchinput.value.trim());\n                        performSearch(search, contextid, params);\n                    }\n                }, 1000));\n            }\n\n        }\n\n        /**\n         * Perform search and update the notes list\n         * @param {string} searchTerm The search term\n         * @param {int} contextid The context ID\n         * @param {object} params The parameters\n         */\n        function performSearch(searchTerm, contextid, params) {\n            var notesContainer = document.querySelector(\".ltool-notes-container, .note-list-container, .ltool-notes-grid\")\n\n            if (!notesContainer) {\n                // If no container found, reload page with search parameter\n                var currentUrl = new URL(window.location.href)\n                currentUrl.searchParams.set(\"search\", searchTerm)\n                window.location.href = currentUrl.toString()\n                return\n            }\n\n            // Show loading indicator\n            notesContainer.innerHTML =\n                '<div class=\"text-center p-4\"><i class=\"fa fa-spinner fa-spin fa-2x\"></i><p class=\"mt-2\">Searching notes...</p></div>'\n\n            // Prepare fragment parameters\n            var fragmentParams = {\n                courseid: params.course,\n                search: searchTerm,\n                sectionid: 0,\n                activity: 0,\n                filter: \"\",\n                print: false,\n            }\n\n            // Load search results using fragment\n            Fragment.loadFragment(\"ltool_note\", \"get_notes_list\", contextid, fragmentParams)\n                .then((html) => {\n                    notesContainer.innerHTML = html\n                    // Update URL without reloading page\n                    var currentUrl = new URL(window.location.href)\n                    currentUrl.searchParams.set(\"search\", searchTerm)\n                    window.history.pushState({}, \"\", currentUrl.toString())\n                })\n                .catch((error) => {\n                    console.error(\"Search error:\", error)\n                    notesContainer.innerHTML =\n                        '<div class=\"alert alert-danger\">Error loading search results. Please try again.</div>'\n                })\n        }\n\n        /**\n         * Reset the search icon and trigger the init for the block.\n         *\n         * @param {HTMLElement} clearIcon Our closing icon to manipulate.\n         */\n        const clearSearch = (clearIcon) => {\n            clearIcon.classList.add('d-none');\n        };\n\n        /**\n         * Change the searching icon to its' active state.\n         *\n         * @param {HTMLElement} clearIcon Our closing icon to manipulate.\n         */\n        const activeSearch = (clearIcon) => {\n            clearIcon.classList.remove('d-none');\n        };\n\n        /**\n         * Clean the url parameters.\n         * @param {string} url page url.\n         * @param {string} parameter url parameter.\n         * @return {url} sort url\n         */\n        function removeURLParameter(url, parameter) {\n            // Prefer to use l.search if you have a location/link object.\n            var urlparts = url.split('?');\n            if (urlparts.length >= 2) {\n\n                var prefix = encodeURIComponent(parameter) + '=';\n                var pars = urlparts[1].split(/[&;]/g);\n\n                // Reverse iteration as may be destructive.\n                for (var i = pars.length; i-- > 0;) {\n                    // Idiom for string.startsWith.\n                    if (pars[i].lastIndexOf(prefix, 0) !== -1) {\n                        pars.splice(i, 1);\n                    }\n                }\n\n                url = urlparts[0] + (pars.length > 0 ? '?' + pars.join('&') : \"\");\n                return url;\n            } else {\n                return url;\n            }\n        }\n\n\n        function modalshowHandler(contextid, params, contentDesigner = false) {\n            var newnote = String.get_string('newnote', 'local_learningtools');\n            $.when(newnote).done(function (localizedEditString) {\n                // Add class.\n                var ltoolnotebody = document.getElementsByTagName('body')[0];\n                if (!ltoolnotebody.classList.contains('learningtool-note')) {\n                    ltoolnotebody.classList.add('learningtool-note');\n                }\n\n                ModalFactory.create({\n                    title: localizedEditString + getPopoutAction(),\n                    type: ModalFactory.types.SAVE_CANCEL,\n                    body: getnoteaction(contextid, params),\n                    large: true\n                }).then(function (modal) {\n\n                    modal.show();\n\n                    modal.getRoot().on(ModalEvents.hidden, function () {\n                        modal.destroy();\n                    });\n\n                    modal.getRoot().on(ModalEvents.save, function (e) {\n                        e.preventDefault();\n                        $(e.target).find(\"button[data-action=save]\").attr(\"disabled\", true);\n                        modal.getRoot().find('form').submit();\n                    });\n\n                    modal.getRoot().on('submit', 'form', e => {\n                        e.preventDefault();\n                        submitFormData(modal, contextid, params, contentDesigner);\n                    });\n\n                    document.querySelector(\"#popout-action\").addEventListener('click', function () {\n                        var pageurlobj = params.pageurl.split(\"&\");\n                        var pageurljson = JSON.stringify(pageurlobj);\n                        var url = M.cfg.wwwroot + \"/local/learningtools/ltool/note/pop_out.php?contextid=\" +\n                            params.contextid + \"&pagetype=\" + params.pagetype + \"&contextlevel=\" + params.contextlevel + \"&course=\"\n                            + params.course + \"&user=\" + params.user + \"&pageurl=\" + pageurljson + \"&pagetitle=\" + params.pagetitle\n                            + \"&heading=\" + params.heading + \"&sesskey=\" + params.sesskey;\n                        if (params.itemtype) {\n                            url += \"&itemtype=\" + params.itemtype + \"&itemid=\" + params.itemid;\n                        }\n                        modal.hide();\n                        window.open(url, '_blank');\n                    });\n                    return modal;\n                }).catch(notification.exception);\n            });\n        };\n\n        /**\n         * Display the modal popup.\n         * @param {int} contextid context id\n         * @param {object} params notes info params\n         * @return {void}\n         */\n        function showModalLttool(contextid, params) {\n\n            var notesinfo = document.querySelector(\".ltnoteinfo #ltnote-action\");\n            if (notesinfo) {\n                notesinfo.addEventListener(\"click\", function () {\n                    params.itemtype = '';\n                    params.itemid = 0;\n                    modalshowHandler(contextid, params);\n                });\n                // Hover color.\n                var notehovercolor = notesinfo.getAttribute(\"data-hovercolor\");\n                var notefontcolor = notesinfo.getAttribute(\"data-fontcolor\");\n                if (notehovercolor && notefontcolor) {\n                    notesinfo.addEventListener(\"mouseover\", function () {\n                        document.querySelector('#ltnoteinfo p').style.background = notehovercolor;\n                        document.querySelector('#ltnoteinfo p').style.color = notefontcolor;\n                    });\n                }\n            }\n        }\n\n        /**\n         * Sort the notes list.\n         * @param {string} sorttype sort type\n         * @return {void}\n         */\n        function noteSortActionPage(sorttype) {\n\n            var pageurl = window.location.href;\n            pageurl = removeURLParameter(pageurl, 'sorttype');\n\n            if (sorttype == 'asc') {\n                sorttype = 'desc';\n            } else if (sorttype == 'desc') {\n                sorttype = 'asc';\n            }\n            var para = '';\n            if (pageurl.indexOf('?') > -1) {\n                para = '&';\n            } else {\n                para = '?';\n            }\n\n            pageurl = pageurl + para + 'sorttype=' + sorttype;\n            window.open(pageurl, '_self');\n        }\n\n        /**\n         * Popout url action html.\n         * @return {string} popout html\n         */\n        function getPopoutAction() {\n            var popouthtml = \"<div class='popout-block'><button type='submit' id='popout-action'\"\n                + \"name='popoutsubmit'>Pop out</button> <i class='fa fa-window-restore'></i></div>\";\n            return popouthtml;\n        }\n\n        /**\n         * Submit the modal data form.\n         * @param {object} modal object\n         * @param {int} contextid context id\n         * @return {void} ajax respoltoolsnse.\n         */\n        function submitFormData(modal, contextid, params, contentDesigner = false) {\n            var modalform = document.querySelectorAll('.ltoolusernotes form')[0];\n            var formData = new URLSearchParams(new FormData(modalform)).toString();\n            var notesuccess = String.get_string('successnotemessage', 'local_learningtools');\n            Ajax.call([{\n                methodname: 'ltool_note_save_usernote',\n                args: { contextid: contextid, formdata: formData },\n                done: function (response) {\n                    // Insert data into notes badge.\n                    if (response) {\n                        // Check if this is a content designer note by looking for the trigger button\n                        if (contentDesigner) {\n                            // Try to refresh the chapter if content designer is available\n                            require(['mod_contentdesigner/elements'], function (Elements) {\n                                var chapterId = params.itemid;\n                                if (chapterId) {\n                                    Elements.removeWarning();\n                                    Elements.refreshContent();\n                                }\n                            });\n                        } else {\n                            var noteinfo = document.querySelector(\".ltnoteinfo span\");\n                            if (!noteinfo.classList.contains('ticked')) {\n                                noteinfo.classList.add('ticked');\n                            }\n                            noteinfo.innerHTML = response;\n                        }\n                    }\n\n                    modal.hide();\n                    $.when(notesuccess).done(function (localizedEditString) {\n                        notification.addNotification({\n                            message: localizedEditString,\n                            type: \"success\"\n                        });\n                    });\n\n                    if (ltools.disappertimenotify != 0) {\n                        setTimeout(function () {\n                            document.querySelector(\"span.notifications\").innerHTML = \"\";\n                        }, ltools.disappertimenotify);\n                    }\n                },\n            }]);\n        }\n\n        /**\n         * Submit the modal data form.\n         * @param {int} contextid\n         * @param {object} params list of the notes params.\n         * @return {string} displayed the note editor form\n         */\n        function getnoteaction(contextid, params) {\n            params.contextid = contextid;\n            if (params.pagetitle == \"\") {\n                params.pagetitle = document.querySelector(\"title\").innerHTML;\n            }\n            return Fragment.loadFragment('ltool_note', 'get_note_form', contextid, params);\n        }\n\n        function notePrintHandler(args) {\n\n            // Cleaned params (exclude contextid here!)\n            const safeParams = {\n                themeurl: args.themeurl,\n                userid: args.userid ?? null,\n                pageurl: window.location.href,\n                // any other required keys specific to your fragment\n            };\n\n            const printWindow = window.open('', 'PRINT', 'height=600,width=800');\n            printWindow.document.write('<html><head><title>' + document.title + '</title>');\n            printWindow.document.write('<link rel=\"stylesheet\" type=\"text/css\" href=\"' + args.themeurl + '\">');\n            printWindow.document.write('</head><body class=\"note-modal\">');\n            printWindow.document.write('<div class=\"notes-content\" id=\"print-notes\"></div>');\n            printWindow.document.write('</body></html>');\n            printWindow.document.close();\n\n            printWindow.onload = () => {\n                getnotescontents(args.contextid, safeParams).then((html, js) => {\n                    const printNotesDiv = printWindow.document.getElementById('print-notes');\n                    printNotesDiv.innerHTML = html;\n\n                    setTimeout(() => {\n                        printWindow.focus();\n                        printWindow.print();\n                    }, 500);\n                }).catch((error) => {\n                    printWindow.document.body.innerHTML = '<p>Error loading content. Please try again later.</p>';\n                });\n            };\n\n            return true;\n        }\n\n        function getnotescontents(contextid, params) {\n            return Fragment.loadFragment('ltool_note', 'get_notes_contents', contextid, params);\n        }\n\n        return {\n\n            init: (contextid) => {\n                learningToolNoteAction(contextid);\n            },\n        };\n    });"],"names":["define","$","ModalFactory","String","Fragment","ModalEvents","Ajax","notification","Utils","learningToolNoteAction","contextid","params","window","ltool_note_config","notesinfo","document","querySelector","addEventListener","itemtype","itemid","modalshowHandler","notehovercolor","getAttribute","notefontcolor","style","background","color","showModalLttool","sorttypefilter","sorttype","pageurl","location","href","url","parameter","urlparts","split","length","prefix","encodeURIComponent","pars","i","lastIndexOf","splice","join","removeURLParameter","para","indexOf","open","noteSortActionPage","this","on","e","button","itemType","data","itemId","noteprintblock","notePrintHandler","bind","clearIcon","searchinput","value","focus","clearSearch","performSearch","debounce","activeSearch","search","trim","console","log","searchTerm","notesContainer","currentUrl","URL","searchParams","set","toString","innerHTML","fragmentParams","courseid","course","sectionid","activity","filter","print","loadFragment","then","html","history","pushState","catch","error","classList","add","remove","contentDesigner","newnote","get_string","when","done","localizedEditString","ltoolnotebody","getElementsByTagName","contains","create","title","getPopoutAction","type","types","SAVE_CANCEL","body","getnoteaction","large","modal","show","getRoot","hidden","destroy","save","preventDefault","target","find","attr","submit","submitFormData","pageurlobj","pageurljson","JSON","stringify","M","cfg","wwwroot","pagetype","contextlevel","user","pagetitle","heading","sesskey","hide","exception","modalform","querySelectorAll","formData","URLSearchParams","FormData","notesuccess","call","methodname","args","formdata","response","require","Elements","removeWarning","refreshContent","noteinfo","addNotification","message","ltools","disappertimenotify","setTimeout","safeParams","themeurl","userid","printWindow","write","close","onload","js","getElementById","init"],"mappings":"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"}